# Local configuration for Autobet (example)
# Copy to .env and fill in real values. Do NOT commit .env.

# ------------------------------
# CORE & DATABASE SETTINGS
# ------------------------------
PAPER_STARTING_BANKROLL="1000"
ADMIN_TOKEN=""

# ------------------------------
# API KEYS
# ------------------------------
TELEGRAM_TOKEN=""

# LLM/AI Provider Keys
LLM_PROVIDER="gemini"                      # or "openai"
LLM_MODEL_GEMINI="gemini-2.5-pro"
LLM_MODEL_OPENAI="gpt-4o"                  # used if LLM_PROVIDER=openai
GEMINI_API_KEY=""
OPENAI_API_KEY=""

# RapidAPI (optional)
RAPIDAPI_KEY=""
RAPIDAPI_HOST_FOOTBALL="sportapi7.p.rapidapi.com"
RAPIDAPI_HOST_TENNIS=""
RAPIDAPI_HOST_HORSE_RACING=""

# Betdaq (optional)
BETDAQ_USERNAME=""
BETDAQ_PASSWORD=""

# Tote API (optional)
TOTE_API_KEY=""
TOTE_GRAPHQL_URL=""         # e.g. https://hub.production.racing.tote.co.uk/partner/connections/graphql/
TOTE_SUBSCRIPTIONS_URL=""    # e.g. wss://.../graphql/

# Betting mode
# Live placement is disabled by default. Set to 1/true/yes/on to allow
# LIVE mode in the web UI (Tote â†’ Place Bet). Otherwise, audit mode only.
TOTE_LIVE_ENABLED="0"

# ------------------------------
# BIGQUERY (WRITES + WEB READS)
# ------------------------------
BQ_WRITE_ENABLED="true"
BQ_PROJECT="autobet-470818"
BQ_DATASET="autobet"
BQ_LOCATION="EU"              # must match your dataset location (e.g., EU)
SUBSCRIBE_POOLS="0"

# BigQuery client and Web SQL cache
BQ_USE_STORAGE_API="true"     # use BQ Storage API for faster pandas reads
WEB_SQLDF_CACHE="true"        # enable TTL cache for repeated web queries
WEB_SQLDF_CACHE_TTL="30"      # seconds
WEB_SQLDF_CACHE_MAX="512"     # max cached queries
WEB_SQLDF_MAX_ROWS="0"        # 0 = unlimited

# ------------------------------
# Weather (optional)
# ------------------------------
OWM_API_KEY=""

# For local dev prefer ADC: `gcloud auth application-default login`
# For production, prefer a service account. Two supported options:
#  - Path: set GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json
#  - Inline JSON: set GCP_SERVICE_ACCOUNT_JSON to the full JSON string
# Avoid committing secrets; use Secret Manager or env injection in production.

# Example (choose one and fill in):
# GOOGLE_APPLICATION_CREDENTIALS="/absolute/path/to/your-service-account.json"
# GCP_SERVICE_ACCOUNT_JSON='{"type":"service_account", "project_id":"...", "private_key_id":"...", "private_key":"-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n", "client_email":"...", "client_id":"...", "auth_uri":"https://accounts.google.com/o/oauth2/auth", "token_uri":"https://oauth2.googleapis.com/token", "auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs", "client_x509_cert_url":"..."}'
